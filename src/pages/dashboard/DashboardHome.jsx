// src/pages/DashboardHome.jsx
import React, { useEffect, useState } from "react";
import axiosInstance from "../../utils/axiosInstance";
import {
    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend
} from "recharts";

const DashboardHome = () => {
    const [totalRevenue, setTotalRevenue] = useState(null);
    const [topCourses, setTopCourses] = useState([]);
    const [childrenPerCourse, setChildrenPerCourse] = useState([]);
    const [revenueByMonth, setRevenueByMonth] = useState([]);
    const [childrenGrowth, setChildrenGrowth] = useState([]);
    const [avgDuration, setAvgDuration] = useState(null);
    const [avgFillPercent, setAvgFillPercent] = useState(null);
    const [returningParentsCount, setReturningParentsCount] = useState(null);
    const [loading, setLoading] = useState(false);

    const centerId = 1;

    const fetchDashboard = async () => {
        try {
            setLoading(true);
            const endpoints = [
                ["total-revenue", setTotalRevenue],
                ["top-courses-by-revenue", setTopCourses],
                ["children-per-course", setChildrenPerCourse],
                ["revenue-by-month", setRevenueByMonth],
                ["children-growth-by-month", setChildrenGrowth],
                ["average-course-duration", setAvgDuration],
                ["average-group-fill-percent", setAvgFillPercent],
                ["returning-parents-count", setReturningParentsCount],
            ];

            await Promise.all(
                endpoints.map(async ([path, setter]) => {
                    const res = await axiosInstance.get(`/api/v1/education-centers/${centerId}/dashboard/${path}`);
                    setter(res.data.data);
                })
            );
        } catch (err) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞:", err);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchDashboard();
    }, []);

    return (
        <div className="p-4 space-y-6">
            <div className="flex justify-between items-center">
                <h2 className="text-xl font-bold">üìä –û–±–∑–æ—Ä —Ü–µ–Ω—Ç—Ä–∞</h2>
                <button
                    onClick={fetchDashboard}
                    disabled={loading}
                    className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50"
                >
                    üîÑ –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>

            {/* üí∞ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ */}
            <div className="bg-white p-4 rounded shadow">
                <h3 className="font-semibold text-lg">üí∞ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</h3>
                <p className="text-2xl">{totalRevenue?.toLocaleString("ru-RU")} ‚Ç∏</p>
            </div>

            {/* üìà –ì—Ä–∞—Ñ–∏–∫: –í—ã—Ä—É—á–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º */}
            <div className="bg-white p-4 rounded shadow">
                <h3 className="font-semibold text-lg mb-2">üìà –í—ã—Ä—É—á–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º</h3>
                <ResponsiveContainer width="100%" height={300}>
                    <LineChart data={revenueByMonth}>
                        <CartesianGrid strokeDasharray="3 3" />
                        <XAxis dataKey="month" />
                        <YAxis />
                        <Tooltip />
                        <Legend />
                        <Line type="monotone" dataKey="revenue" name="‚Ç∏ –í—ã—Ä—É—á–∫–∞" stroke="#4F46E5" strokeWidth={2} />
                    </LineChart>
                </ResponsiveContainer>
            </div>

            {/* üë∂ –ì—Ä–∞—Ñ–∏–∫: –†–æ—Å—Ç –¥–µ—Ç–µ–π –ø–æ –º–µ—Å—è—Ü–∞–º */}
            <div className="bg-white p-4 rounded shadow">
                <h3 className="font-semibold text-lg mb-2">üë∂ –†–æ—Å—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ—Ç–µ–π</h3>
                <ResponsiveContainer width="100%" height={300}>
                    <LineChart data={childrenGrowth}>
                        <CartesianGrid strokeDasharray="3 3" />
                        <XAxis dataKey="month" />
                        <YAxis allowDecimals={false} />
                        <Tooltip />
                        <Legend />
                        <Line type="monotone" dataKey="childrenCount" name="–î–µ—Ç–∏" stroke="#10B981" strokeWidth={2} />
                    </LineChart>
                </ResponsiveContainer>
            </div>

            {/* üèÜ –¢–æ–ø –∫—É—Ä—Å—ã */}
            <div className="bg-white p-4 rounded shadow">
                <h3 className="font-semibold text-lg">üèÜ –¢–æ–ø –∫—É—Ä—Å—ã –ø–æ –≤—ã—Ä—É—á–∫–µ</h3>
                <ul>
                    {topCourses.map((course, i) => (
                        <li key={i}>
                            {course.courseName} ‚Äî {course.revenue.toLocaleString("ru-RU")} ‚Ç∏
                        </li>
                    ))}
                </ul>
            </div>

            {/* üë• –î–µ—Ç–∏ –ø–æ –∫—É—Ä—Å–∞–º */}
            <div className="bg-white p-4 rounded shadow">
                <h3 className="font-semibold text-lg">üë• –î–µ—Ç–∏ –ø–æ –∫—É—Ä—Å–∞–º</h3>
                <ul>
                    {childrenPerCourse.map((c, i) => (
                        <li key={i}>
                            {c.courseName}: {c.childrenCount} –¥–µ—Ç–µ–π
                        </li>
                    ))}
                </ul>
            </div>

            {/* üìö –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—É—Ä—Å–∞ */}
            <div className="bg-white p-4 rounded shadow">
                <h3 className="font-semibold text-lg">üìö –°—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—É—Ä—Å–∞</h3>
                <p>{avgDuration} –Ω–µ–¥–µ–ª—å</p>
            </div>

            {/* üìä –ó–∞–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å –≥—Ä—É–ø–ø */}
            <div className="bg-white p-4 rounded shadow">
                <h3 className="font-semibold text-lg">üìä –°—Ä–µ–¥–Ω—è—è –∑–∞–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å –≥—Ä—É–ø–ø</h3>
                <p>{avgFillPercent?.toFixed(1)}%</p>
            </div>

            {/* üîÅ –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏ */}
            <div className="bg-white p-4 rounded shadow">
                <h3 className="font-semibold text-lg">üîÅ –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ–ø–ª–∞—Ç–∏–≤—à–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–∏</h3>
                <p>{returningParentsCount}</p>
            </div>
        </div>
    );
};

export default DashboardHome;
